********************************************************************************
********************************************************************************
******************************         README        ***************************
********************************************************************************
********************************************************************************


Copyright (c) LGPL 2017 Tomer Sidi, Chen Keasar

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

--------------------------------------------------------------------------------


MESHI-Score Software
********************

The meshiAS software is the standalone version of the MESHI-Score function of Keasar group. Based on meshi9.38_light java package.
It is an EMA (Estimation of Model Accuracy) function. It is designed to produce a score in the range of (0,1) to predict the quality of the protein model.
Additional info can be found here: 10.1109/TCBB.2016.2602269
Version 1.0

The software requires additional softwares: blast  dssp  psipred25  scwrl4  uniref90 


1. Installation (A): Download Auxilary Sofwares
-------------------


i. Download dssp to folder: [APP_PATH]/aux/dssp

$> rsync -avz rsync://rsync.cmbi.ru.nl/dssp/ [APP_PATH]/aux/dssp



ii. Download blast to folder [APP_PATH]/aux/blast

https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download



iii. Download psipred25 to folder: [APP_PATH]/aux/psipred25

http://bioinfadmin.cs.ucl.ac.uk/downloads/psipred/


iv. Download scwrl4 to folder: [APP_PATH]/aux/scwrl4

http://dunbrack.fccc.edu/scwrl4/index.php#installation


v. Download sspro4 to folder: [APP_PATH]/aux/sspro4

http://download.igb.uci.edu/#sspro


vi. Download uniref90.fasta to folder: [APP_PATH]/aux/uniref90 

cd [APP_PATH]/aux/uniref90
[APP_PATH]/aux/blast/bin/formatdb -i uniref90.fasta -p T  


1. Installation (B):
-------------------

cd [App Dir]
./setup.sh


2. Run instructions:
-------------------

Option 1:

./score.sh [Decoy path] 

Option 2: 

./score.sh [Decoy path] [(Optional) 1/0 - tmp folder removal - (1 default)]

3. Output:
---------

[Score Function Name] [Score Value] [Decoy Path]

4. Prerequisites:
----------------

1. "secondaryStructurePrediction" - Secondary structure prediciton file (PsiPred)
2. "sasaPrediction" - Accessability prediction file (PsiPred)
3. "[Decoy Name].dssp" - Dssp file of the decoy, notice the ".pdb" file extension is replaced with ".dssp" .
4. "[Decoy name].scwrl.pdb" - (Recommended) Scwrl (side-chain optimization) to be applied on the decoy, prior to execution. the ".pdb" file extension is replaced with ".scwrl.pdb" .

5. Example:
----------
From the [APP] dir, execute:

./score.sh T0491.BAKER-ROBETTA_TS1.pdb

